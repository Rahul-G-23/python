import math

class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

class Rectangle:
    def __init__(self, corner, width, height):
        self.corner = corner  # bottom-left corner (a Point)
        self.width = width
        self.height = height

class Circle:
    def __init__(self, center, radius):
        self.center = center
        self.radius = radius

def point_in_circle(circle, point):
    dx = point.x - circle.center.x
    dy = point.y - circle.center.y
    distance = math.hypot(dx, dy)
    return distance <= circle.radius

def rect_in_circle(circle, rect):
    corners = [
        rect.corner,  # bottom-left
        Point(rect.corner.x + rect.width, rect.corner.y),  
        Point(rect.corner.x, rect.corner.y + rect.height),  
        Point(rect.corner.x + rect.width, rect.corner.y + rect.height)  
    ]
    return all(point_in_circle(circle, corner) for corner in corners)

def rect_circle_overlap(circle, rect):
    corners = [
        rect.corner,
        Point(rect.corner.x + rect.width, rect.corner.y),
        Point(rect.corner.x, rect.corner.y + rect.height),
        Point(rect.corner.x + rect.width, rect.corner.y + rect.height)
    ]
    return any(point_in_circle(circle, corner) for corner in corners)

c = Circle(Point(150, 100), 75)

r_inside = Rectangle(Point(100, 75), 30, 40)

r_overlap = Rectangle(Point(140, 90), 50, 50)

r_outside = Rectangle(Point(300, 300), 40, 40)

print("Name: Rahul G \n USN:1AY24AI088\n Section: 'O'")
print("point_in_circle:", point_in_circle(c, Point(150, 100)))  
print("rect_in_circle (should be True):", rect_in_circle(c, r_inside))  
print("rect_in_circle (should be False):", rect_in_circle(c, r_overlap))  
print("rect_circle_overlap (should be True):", rect_circle_overlap(c, r_overlap))  
print("rect_circle_overlap (should be False):", rect_circle_overlap(c, r_outside))  
